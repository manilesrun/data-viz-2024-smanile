knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
leading_problem_data <- read_csv("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 5)
library(readr)
leading_problem_data <- read_csv("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 5)
library(readxl)
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 5)
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 5)
leading_problem_data
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 4)
leading_problem_data
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 4)
leading_problem_data
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 3)
leading_problem_data
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 3)
leading_problem_data
leading_problem_data <- na.omit(leading_problem_data)
leading_problem_data <- na.omit(leading_problem_data)
leading_problem_data
leading_problem_data <- leading_problem_data %>% filter(!is.na(leading_problem_data))
leading_problem_data <- na.omit(leading_problem_data)
leading_problem_data
colnames(leading_problem_data)
# Removing NA row
leading_problem_data <- na.omit(leading_problem_data)
# Check and Rename the columns name
colnames(leading_problem_data)
leading_problem_data <- leading_problem_data %>% rename("Biggest Health Problems" = "Percentage of adults worldwide who stated select issues were the biggest health problems facing people in their country in 2024","Percent"="...2")
# Remove 3rd Column
leading_problem_data <- leading_problem_data %>% select(-3)
leading_problem_data
#UI
ui <- fluidPage(
# Dashboard Title
titlePanel("Leading Health Problems Worldwide (2024)"),
# Sidebar Layout with a Dropdown Selector for Health Issues
sidebarLayout(
sidebarPanel(
# Dropdown menu for selecting a health issue
selectInput("selected_issue", "Select a Health Issue to View:",
choices = leading_problem_data$`Biggest Health Problems`, selected = "Mental health")
),
# Main panel for displaying outputs
mainPanel(
# Dynamic plot
plotOutput("healthPlot"),
# Display selected percentage
textOutput("percentText")
)
)
)
library(readxl)
library(shiny)
library(ggplot2)
library(dplyr)
leading_problem_data <- read_excel("statistic_id917148_leading-health-problems-worldwide-2024.xlsx", sheet=2, skip = 3)
leading_problem_data
# Removing NA row
leading_problem_data <- na.omit(leading_problem_data)
# Check and Rename the columns name
colnames(leading_problem_data)
leading_problem_data <- leading_problem_data %>% rename("Biggest Health Problems" = "Percentage of adults worldwide who stated select issues were the biggest health problems facing people in their country in 2024","Percent"="...2")
# Remove 3rd Column
leading_problem_data <- leading_problem_data %>% select(-3)
leading_problem_data
#UI
ui <- fluidPage(
# Dashboard Title
titlePanel("Leading Health Problems Worldwide (2024)"),
# Sidebar Layout with a Dropdown Selector for Health Issues
sidebarLayout(
sidebarPanel(
# Dropdown menu for selecting a health issue
selectInput("selected_issue", "Select a Health Issue to View:",
choices = leading_problem_data$`Biggest Health Problems`, selected = "Mental health")
),
# Main panel for displaying outputs
mainPanel(
# Dynamic plot
plotOutput("healthPlot"),
# Display selected percentage
textOutput("percentText")
)
)
)
# Server logic
server <- function(input, output) {
# Render the plot based on the user's selection
output$healthPlot <- renderPlot({
selected_data <- leading_problem_data %>%
filter(`Biggest Health Problems` == input$selected_issue)
ggplot(selected_data, aes(x = `Biggest Health Problems`, y = Percent)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Percentage of Adults Identifying", input$selected_issue, "as the Biggest Health Problem"),
x = "Health Issue", y = "Percentage (%)") +
ylim(0, 100)
})
# Display the percentage value dynamically
output$percentText <- renderText({
selected_data <- leading_problem_data %>%
filter(`Biggest Health Problems` == input$selected_issue)
paste("In 2024, ", selected_data$Percent, "% of adults worldwide identified", input$selected_issue, "as the biggest health problem.")
})
}
# Run the app
shinyApp(ui = ui, server = server)
# Removing NA row
leading_health_problems_data <- na.omit(leading_problem_data)
# Check and Rename the columns name
colnames(leading_problem_data)
leading_health_problems_data <- leading_health_problems_data %>% rename("Biggest Health Problems" = "Percentage of adults worldwide who stated select issues were the biggest health problems facing people in their country in 2024","Percent"="...2")
# Removing NA row
leading_health_problems_data <- na.omit(leading_problem_data)
# Check and Rename the columns name
colnames(leading_health_problems_data)
leading_health_problems_data <- leading_health_problems_data %>% rename("Biggest Health Problems" = "Percentage of adults worldwide who stated select issues were the biggest health problems facing people in their country in 2024","Percent"="...2")
# Removing NA row
leading_health_problems_data <- na.omit(leading_health_problems_data)
# Check and Rename the columns name
colnames(leading_health_problems_data)
leading_health_problems_data <- leading_health_problems_data %>% rename("Biggest Health Problems" = "Percentage of adults worldwide who stated select issues were the biggest health problems facing people in their country in 2024","Percent"="...2")
# Removing NA row
leading_health_problems_data <- na.omit(leading_health_problems_data)
# Check and Rename the columns name
colnames(leading_health_problems_data)
write.csv(data_updated_populations, "leading_health_problems.csv", row.names = FALSE)
write.csv(leading_health_problems_data, "leading_health_problems.csv", row.names = FALSE)
